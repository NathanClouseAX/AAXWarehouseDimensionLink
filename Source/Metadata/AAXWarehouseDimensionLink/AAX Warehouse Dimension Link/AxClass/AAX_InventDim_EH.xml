<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AAX_InventDim_EH</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AAX_InventDim_EH
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>InventDim_onModifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [DataEventHandler(tableStr(InventDim), DataEventType::ModifiedFieldValue)]
    public static void InventDim_onModifiedFieldValue(Common sender, DataEventArgs e)
    {
       
        ModifyFieldValueEventArgs args = e as ModifyFieldValueEventArgs;
        InventDim InventDim = sender as InventDim;
        FieldName FieldName = args.parmFieldName();
        AxInventDim  axInventDim;


        FieldId FieldId = fieldName2Id(tableNum(InventDim), FieldName);

        if (!FormDataUtil::isFormDataSource(InventDim))
        {
            axInventDim = AxInventDim::newInventDim(InventDim);
            axInventDim.setFieldAsTouched(FieldId);
            axInventDim.modify();
        }
        else
        {
            switch (FieldId)
            {
                case fieldNum(InventDim, InventSiteId):
                    inventDim.AAX_InventStorageDimMap::modifiedField(fieldNum(AAX_InventStorageDimMap, InventSiteId));
                    break;

                case fieldNum(InventDim, InventLocationId):
                    inventDim.AAX_InventStorageDimMap::modifiedField(fieldNum(AAX_InventStorageDimMap, InventLocationId));
                    break;
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>InventDim_Post_modifiedInventSiteFromParent</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    /*
    [PostHandlerFor(tableStr(InventDim), tableMethodStr(InventDim, modifiedField))]
    public static void InventDim_Post_modifiedField(XppPrePostArgs args)
    {
        
        FieldId             FieldId             =   args.getArg(identifierStr(_fieldIdToCheck));
        InventDim           inventDim           =   args.getThis();
        //get fieldID
        AxInventDim  axInventDim;

        if (!FormDataUtil::isFormDataSource(InventDim))
        {
            axInventDim = AxInventDim::newInventDim(InventDim);
            axInventDim.setFieldAsTouched(FieldId);
            axInventDim.modify();
        }
        else
        {
            switch (FieldId)
            {
                case fieldNum(InventDim, InventSiteId):
                    inventDim.AAX_InventStorageDimMap::modifiedField(fieldNum(InventStorageDimMap, InventSiteId));
                    break;

                case fieldNum(InventDim, InventLocationId):
                    inventDim.AAX_InventStorageDimMap::modifiedField(fieldNum(InventStorageDimMap, InventSiteId));
                    break;
            }
        }
        

    }
    */
    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    [PostHandlerFor(tableStr(InventDim), tableMethodStr(InventDim, modifiedInventSiteFromParent))]
    public static void InventDim_Post_modifiedInventSiteFromParent(XppPrePostArgs args)
    {
        Common parent              =   args.getArg(identifierStr(_parent));
        InventDim oldInventDIm     =   args.getArg(identifierStr(_oldInventDim));

        InventDim InventDim = args.getThis();

        if (InventDim.InventSiteId != oldInventDim.InventSiteId)
        {
            InventDim.AAX_InventStorageDimMap::modifiedInventSiteFromParent(parent);
        }

        if (InventDim.InventLocationId != oldInventDim.InventLocationId)
        {
            InventDim.AAX_InventStorageDimMap::modifiedInventSiteFromParent(parent);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventDim_Post_initFromInventLocation</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    [PostHandlerFor(tableStr(InventDim), tableMethodStr(InventDim, initFromInventLocation))]
    public static void InventDim_Post_initFromInventLocation(XppPrePostArgs args)
    {
        InventDim InventDim = args.getThis();

        InventLocation  inventLocation = args.getArg(identifierStr(_inventLocation));

        if(!InventLocation)
        {
            InventLocation = InventDim.inventLocation();
        }

        InventDim.AAX_InventStorageDimMap::initFromInventLocation(inventLocation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventDim_Post_validateField</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    [PostHandlerFor(tableStr(InventDim), tableMethodStr(InventDim, validateField))]
    public static void InventDim_Post_validateField(XppPrePostArgs args)
    {

        boolean             ret = args.getReturnValue();
        FieldId             p1 = args.getArg(identifierStr(_p1));
            
        InventDim           inventDim = args.getThis();

        switch (p1)
        {

            case fieldNum (InventDim, InventLocationId):
                ret = ret & InventDim.AAX_InventStorageDimMap::validateField(fieldNum(AAX_InventStorageDimMap, InventLocationId));
                break;
        }

        args.setReturnValue(ret);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>