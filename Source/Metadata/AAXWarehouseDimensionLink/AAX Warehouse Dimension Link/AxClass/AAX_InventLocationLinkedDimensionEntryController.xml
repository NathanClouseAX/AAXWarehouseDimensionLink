<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AAX_InventLocationLinkedDimensionEntryController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventLocationLinkedDimensionEntryController</c> class provides support for data entry in the dimension entry control for
/// the behavior mandated by the inventory dimension link setup.
/// </summary>
[System.ComponentModel.Composition.ExportMetadataAttribute(extendedtypestr(ExtendedDataTypeName), extendedtypestr(AAX_InventLocationLinkedDimensionValueSet)),
 System.ComponentModel.Composition.ExportAttribute(identifierstr(Dynamics.AX.Application.DimensionEntryController))]
public class AAX_InventLocationLinkedDimensionEntryController extends LedgerDefaultDimensionEntryController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static AAX_InventLocationLinkedDimensionEntryController construct()
    {
        AAX_InventLocationLinkedDimensionEntryController controller = new AAX_InventLocationLinkedDimensionEntryController();
        controller.initialize();
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onCompanyChange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the controller when the company changes.
    /// </summary>
    protected void onCompanyChange()
    {
        super();

        changecompany (company)
        {
            InventParameters inventParameters = InventParameters::find();

            DimensionAttributeRecId linkedDimAttributeId = inventParameters.AAX_LocationDimensionAttribute;
            
            boolean preventEdit = (inventParameters.AAX_InventLocationDimensionLink == InventMultiSiteDimensionLink::Locked);

            if (linkedDimAttributeId && preventEdit)
            {
                DimensionAttributeSetStorage editableDimensionSetStorage =
                    DimensionAttributeSetStorage::find(this.parmDimensionsToDisplay());

                editableDimensionSetStorage.removeDimensionAttribute(linkedDimAttributeId);
                DimensionEnumeration editableDimensionSet = editableDimensionSetStorage.save();

                this.parmDimensionsToAllowEdit(editableDimensionSet);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>